create table "public"."stories" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "media_url" text default ''::text,
    "user_id" bigint
);


alter table "public"."stories" enable row level security;

alter table "public"."posts" add column "media_url" text default ''::text;

CREATE UNIQUE INDEX stories_pkey ON public.stories USING btree (id);

alter table "public"."stories" add constraint "stories_pkey" PRIMARY KEY using index "stories_pkey";

alter table "public"."stories" add constraint "stories_user_id_fkey" FOREIGN KEY (user_id) REFERENCES users(id) not valid;

alter table "public"."stories" validate constraint "stories_user_id_fkey";

grant delete on table "public"."stories" to "anon";

grant insert on table "public"."stories" to "anon";

grant references on table "public"."stories" to "anon";

grant select on table "public"."stories" to "anon";

grant trigger on table "public"."stories" to "anon";

grant truncate on table "public"."stories" to "anon";

grant update on table "public"."stories" to "anon";

grant delete on table "public"."stories" to "authenticated";

grant insert on table "public"."stories" to "authenticated";

grant references on table "public"."stories" to "authenticated";

grant select on table "public"."stories" to "authenticated";

grant trigger on table "public"."stories" to "authenticated";

grant truncate on table "public"."stories" to "authenticated";

grant update on table "public"."stories" to "authenticated";

grant delete on table "public"."stories" to "service_role";

grant insert on table "public"."stories" to "service_role";

grant references on table "public"."stories" to "service_role";

grant select on table "public"."stories" to "service_role";

grant trigger on table "public"."stories" to "service_role";

grant truncate on table "public"."stories" to "service_role";

grant update on table "public"."stories" to "service_role";

create policy "Enable insert for all users"
on "public"."stories"
as permissive
for insert
to public
with check (true);


create policy "Enable read access for all users"
on "public"."stories"
as permissive
for select
to public
using (true);



